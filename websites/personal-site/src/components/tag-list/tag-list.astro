---
import './tag-list.less'
import { Foreach, If } from '@marmadilemanteater/astro-logic-components'
import type { Tag } from '@marmadilemanteater/dataservice/tags'
import type { HTMLAttributes } from 'astro/types'

// @ts-ignore
import jsLogo from '../../../../../packages/static-data/public/images/logos/js-logo.png?format=webp&w=40&h=40'
// @ts-ignore
import csharpLogo from '../../../../../packages/static-data/public/images/logos/csharp-logo.png?format=webp&w=40&h=40'
// @ts-ignore
import pythonLogo from '../../../../../packages/static-data/public/images/logos/python-logo.png?format=webp&w=40&h=40'
import { sourceUrlBase } from '../../dataservice'

const logos: Record<string, any> = {
  'javascript': jsLogo,
  'csharp': csharpLogo,
  'python': pythonLogo,
  'rust': '/images/logos/rust-logo-blk.svg'
}

interface Props extends HTMLAttributes<'p'> {
  tags: Tag[]
}

const langsWithImages = Object.keys(logos)

const { tags, ...rest }: Props = Astro.props
// put all images at the front of the tags
tags.sort((a, b) => langsWithImages.indexOf(b.name) - langsWithImages.indexOf(a.name))
---
<p
 class='tag-list'
 {...rest}
>
  <Fragment set:html={`<!-- component source: ${new URL('src/components/tag-list/tag-list.astro', sourceUrlBase)} -->`} />
  <Foreach
    list={tags}
  >
    {(tag: Tag) => <>
      <If condition={langsWithImages.indexOf(tag.name) === -1}>
        <a class='tag' href={tag.link}>{tag.name}</a>
        <a slot='else' href={tag.link}><img src={logos[tag.name]} width='40' class={tag.name} /></a>
      </If>
    </>}
  </Foreach>
  <slot/>
</p>
